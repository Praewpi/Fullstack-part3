{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["baseUrl","personService","axios","get","then","response","data","newPerson","post","id","delete","concat","updatedPerson","put","Filter","_ref","searchTerm","handleSearch","React","createElement","value","onChange","PersonsDisplay","_ref2","persons","handleDelete","map","person","key","name","number","onClick","PersonForm","_ref3","newName","newPhone","handleNameChange","handlePhoneChange","handleSubmit","onSubmit","type","Notification","_ref4","message","className","App","_useState","useState","_useState2","_slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewPhone","_useState7","_useState8","setSearchTerm","_useState9","_useState10","notification","setNotification","_useState11","_useState12","notificationType","setNotificationType","useEffect","console","log","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","window","confirm","find","_objectSpread","setTimeout","catch","error","length","personId","p","alert","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a7c890d8.chunk.js","sourcesContent":["import axios from 'axios'\n\n//const baseUrl= 'http://localhost:3001/persons'\nconst baseUrl = '/api/persons' //'http://localhost:3001/api/persons'  //for part3\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n  }\n\nconst create = (newPerson) => {\n    return axios.post(baseUrl, newPerson).then(response => response.data)\n  }\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n  }\n\nconst update = (id, updatedPerson) => {\n    return axios.put(`${baseUrl}/${id}`, updatedPerson).then(response => response.data)\n  }\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/personService'\n\n// for search block display\nconst Filter = ({ searchTerm, handleSearch }) => {\n  return (\n    <div>\n      filter shown with: <input value={searchTerm} onChange={handleSearch} />\n    </div>\n  )\n}\n\n// for display all people with delete button\nconst PersonsDisplay = ({ persons , handleDelete}) => {\n  return (\n    <div>\n      {persons.map(person => (\n        <div key={person.id}>\n          {person.name}  {person.number}\n          <button onClick={() => handleDelete(person.id)}>delete</button>\n        </div>\n      ))}\n    </div>\n  )\n}\n// for display submit section\nconst PersonForm = ({ newName, newPhone, handleNameChange, handlePhoneChange, handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newPhone} onChange={handlePhoneChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n// for sucess and error notification display\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n  if (type === 'success') {\n    return (\n      <div className='success'>\n        {message}\n      </div>\n    )\n  } else if (type === 'error') {\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n\n  return null\n}\n\n\n// application main part\nconst App = () => {\n  const [persons, setPersons ] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [notification, setNotification] = useState('')\n  const [notificationType, setNotificationType] = useState('')\n\n// check axios progression of the execution.\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n      })\n  }, [])\n\n  // for handle new added name\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n // for handle new added phone number with name\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n  \n  // handle search \n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  // handle submit form \n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    // check if added person already exist\n    if (persons.map(person => person.name).includes(newName)) { \n      const confirmUpdate = window.confirm(\n        `${newName} is already added to the phonebook. Replace the old number with a new one?`\n      )\n      if (confirmUpdate) {\n      const person = persons.find((person) => person.name === newName)\n      const updatedPerson = { ...person, number: newPhone }\n      const id = person.id\n\n      personService\n        .update(id, updatedPerson)\n        .then((response) => {\n          setPersons(\n            persons.map((person) =>\n                person.id !== id ? person : response)\n          )\n          setNotification(`Updated ${person.name}`)\n          setNotificationType('success')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          console.log(\"error\", error)\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification(`Information of '${person.name}' has already been removed from server`)\n          setNotificationType('error')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        setNewName('')\n        setNewPhone('')\n        return\n    }\n\n    } else {\n      const newPerson = { name: newName, number: newPhone, id: persons.length + 1 }\n      // add person to server\n      personService\n      .create(newPerson)\n      .then(response => {\n        console.log(response)\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewPhone('')\n        setNotification(`Added ${newName}`)\n        setNotificationType('success')\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(\"contact could not be added!\")\n        console.log(error.response.data.error)\n        setNotification(`contact could not be added: ${error.response.data.error}'`)\n        setNotificationType('error')\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    }\n  }\n\n  // for filter with case sensitive\n  const filteredPersons = persons.filter(person =>\n    person.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n // handle delete person \n const handleDelete = personId => {\n    const person = persons.find(person => person.id === personId)\n    if (person) {\n      const confirmDeletion = window.confirm(`Delete ${person.name} ?`)\n      if (confirmDeletion) {\n        personService\n          .remove(person.id)\n          .then(() => {\n            setPersons(persons.filter(p => p.id !== person.id))\n          })\n          .catch(error => {\n            console.log('error', error)\n            alert('Failed to delete the person from the server.')\n          })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} type={notificationType} />\n      <Filter searchTerm={searchTerm} handleSearch={handleSearch} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n        handleSubmit={handleSubmit}\n      />\n     \n      <h2>Numbers</h2>\n      <PersonsDisplay persons={filteredPersons} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)"],"sourceRoot":""}